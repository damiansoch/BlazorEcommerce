@page "/product/{id:guid}"
@inject IProductManager ProductManager

@if (_product is null && message.Length == 0)
{
    <div class="row">
        <div class="spinner-grow mx-auto" role="status">
            <span class="visually-hidden">@message</span>
        </div>
    </div>
}
else if (_product is null && message.Length > 0)
{
    <p>@message</p>
}
else if (_product is not null)
{
    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@_product.ImageUrl" alt="@_product.Title" />
        </div>
        <div class="media-body">
            <h2 class="mb-0">@_product.Title</h2>
            <p>@_product.Description</p>
            <h4 class="price">@_product.Price</h4>
        </div>
    </div> 
}


@code {
    private Product? _product = null;
    private string message = string.Empty;

    [Parameter]
    public Guid Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading product...";
        var result = await ProductManager.GetProductById(Id);
        if (result.Data is null)
        {
            message = result.Message;
        }

        _product = result.Data;
        

    }
}
