@page "/product/{id:guid}"
@using BlazorEcommerce.Client.Shared.HelpersFunctions
@inject IProductManager ProductManager

@if (_product is null)
{
    <div class="row">
        <div class="spinner-grow mx-auto" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{

    <div class="media">
        <div style="width: 100%" class="media-img-wrapper d-flex">
            <img class="media-img" src="@_product.ImageUrl" alt="@_product.Title" />
        </div>
        <div class="media-body">
            <h2 class="mb-0">@_product.Title</h2>
            <p>@_product.Description</p>
            @if (_product.Variants.Count > 1)
            {
                <select @bind="_currentTypeId" class="form-select my-5" aria-label="Default select example">
                    <option selected>Select variant</option>
                    @foreach (var variant in _product.Variants)
                    {
                        <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                    }
                </select>
            }
            @if (GetSelectedVariant() is not null)
            {

                @if (GetSelectedVariant().Price < GetSelectedVariant().OriginalPrice)
                {
                    <h6 class="text-muted text-decoration-line-through">
                        $@GetSelectedVariant().OriginalPrice.PriceToFixedString()
                    </h6>
                    <h4 class="price">
                        $@GetSelectedVariant().Price.PriceToFixedString()
                    </h4>
                }
                else
                {
                    <h4 class="price">
                        $@GetSelectedVariant().Price.PriceToFixedString()
                    </h4>
                }
            }
        </div>
    </div>
}

@code {
    private Product? _product = null;
    
    private Guid  _currentTypeId = Guid.Empty;
    

    [Parameter]
    public Guid Id { get; set; }


    protected override async Task OnParametersSetAsync()
    {
        _product = await ProductManager.GetProductById(Id);
        if (_product.Variants.Count > 0)
        {
            _currentTypeId = _product.Variants[0].ProductTypeId;
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        return  _product.Variants.FirstOrDefault(v => v.ProductTypeId == _currentTypeId);
    }
}